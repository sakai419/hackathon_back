// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: profiles.sql

package sqlc

import (
	"context"
	"database/sql"
)

const checkProfileExists = `-- name: CheckProfileExists :one
SELECT EXISTS(SELECT 1 FROM profiles WHERE account_id = ?)
`

func (q *Queries) CheckProfileExists(ctx context.Context, accountID string) (bool, error) {
	row := q.db.QueryRowContext(ctx, checkProfileExists, accountID)
	var exists bool
	err := row.Scan(&exists)
	return exists, err
}

const createProfile = `-- name: CreateProfile :exec
INSERT INTO profiles (account_id, bio, profile_image_url, banner_image_url)
VALUES (?, ?, ?, ?)
`

type CreateProfileParams struct {
	AccountID       string
	Bio             sql.NullString
	ProfileImageUrl sql.NullString
	BannerImageUrl  sql.NullString
}

func (q *Queries) CreateProfile(ctx context.Context, arg CreateProfileParams) error {
	_, err := q.db.ExecContext(ctx, createProfile,
		arg.AccountID,
		arg.Bio,
		arg.ProfileImageUrl,
		arg.BannerImageUrl,
	)
	return err
}

const deleteProfile = `-- name: DeleteProfile :exec
DELETE FROM profiles
WHERE account_id = ?
`

func (q *Queries) DeleteProfile(ctx context.Context, accountID string) error {
	_, err := q.db.ExecContext(ctx, deleteProfile, accountID)
	return err
}

const getProfileByAccountId = `-- name: GetProfileByAccountId :one
SELECT account_id, bio, profile_image_url, banner_image_url, created_at, updated_at FROM profiles
WHERE account_id = ?
`

func (q *Queries) GetProfileByAccountId(ctx context.Context, accountID string) (Profile, error) {
	row := q.db.QueryRowContext(ctx, getProfileByAccountId, accountID)
	var i Profile
	err := row.Scan(
		&i.AccountID,
		&i.Bio,
		&i.ProfileImageUrl,
		&i.BannerImageUrl,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateBannerImageUrl = `-- name: UpdateBannerImageUrl :exec
UPDATE profiles
SET banner_image_url = ?
WHERE account_id = ?
`

type UpdateBannerImageUrlParams struct {
	BannerImageUrl sql.NullString
	AccountID      string
}

func (q *Queries) UpdateBannerImageUrl(ctx context.Context, arg UpdateBannerImageUrlParams) error {
	_, err := q.db.ExecContext(ctx, updateBannerImageUrl, arg.BannerImageUrl, arg.AccountID)
	return err
}

const updateProfileBio = `-- name: UpdateProfileBio :exec
UPDATE profiles
SET bio = ?
WHERE account_id = ?
`

type UpdateProfileBioParams struct {
	Bio       sql.NullString
	AccountID string
}

func (q *Queries) UpdateProfileBio(ctx context.Context, arg UpdateProfileBioParams) error {
	_, err := q.db.ExecContext(ctx, updateProfileBio, arg.Bio, arg.AccountID)
	return err
}

const updateProfileImageUrl = `-- name: UpdateProfileImageUrl :exec
UPDATE profiles
SET profile_image_url = ?
WHERE account_id = ?
`

type UpdateProfileImageUrlParams struct {
	ProfileImageUrl sql.NullString
	AccountID       string
}

func (q *Queries) UpdateProfileImageUrl(ctx context.Context, arg UpdateProfileImageUrlParams) error {
	_, err := q.db.ExecContext(ctx, updateProfileImageUrl, arg.ProfileImageUrl, arg.AccountID)
	return err
}
